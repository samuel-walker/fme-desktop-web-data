#! <?xml version="1.0" encoding="UTF-8" ?>
#! <WORKSPACE
#    Command-line to run this workspace:
#        "C:\Program Files\FME 2019.0\fme.exe" "C:\Users\swalker\Documents\GitHub\Web Data Module\fme-desktop-web-data\fme\TweetWorkspaceRunner.fmw"
#    
#!   ATTR_TYPE_ENCODING="SDF"
#!   BEGIN_PYTHON=""
#!   BEGIN_TCL=""
#!   CATEGORY=""
#!   DESCRIPTION=""
#!   DESTINATION="NONE"
#!   DESTINATION_ROUTING_FILE=""
#!   DOC_EXTENTS="1686.58 438.251"
#!   DOC_TOP_LEFT="-385.248 -1548.68"
#!   END_PYTHON=""
#!   END_TCL=""
#!   EXPLICIT_BOOKMARK_ORDER="false"
#!   FME_BUILD_NUM="19135"
#!   FME_DOCUMENT_GUID="6f298c6f-6610-4130-8038-b8b0b381a03b"
#!   FME_DOCUMENT_PRIORGUID="a3b3c999-ff2b-453b-a6c8-9cf8fcbfec58,9dd2f3cc-f916-4b0e-b602-4ea6adc3d9ff,fe90b0f6-2dd9-4fc7-9c93-1c8fc327b925"
#!   FME_GEOMETRY_HANDLING="Enhanced"
#!   FME_IMPLICIT_CSMAP_REPROJECTION_MODE="Auto"
#!   FME_REPROJECTION_ENGINE="FME"
#!   FME_SERVER_SERVICES=""
#!   FME_STROKE_MAX_DEVIATION="0"
#!   HISTORY=""
#!   IGNORE_READER_FAILURE="No"
#!   LAST_SAVE_BUILD="FME(R) 2019.0.0.0 (20181018 - Build 19135 - WIN64)"
#!   LAST_SAVE_DATE="2018-11-13T15:21:10"
#!   LOG_FILE=""
#!   LOG_MAX_RECORDED_FEATURES="200"
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   MAX_LOG_FEATURES="200"
#!   MULTI_WRITER_DATASET_ORDER="BY_ID"
#!   PASSWORD=""
#!   PYTHON_COMPATIBILITY="36"
#!   REDIRECT_TERMINATORS="NONE"
#!   SAVE_ON_PROMPT_AND_RUN="Yes"
#!   SHOW_ANNOTATIONS="true"
#!   SHOW_INFO_NODES="true"
#!   SOURCE="NONE"
#!   SOURCE_ROUTING_FILE=""
#!   TERMINATE_REJECTED="YES"
#!   TITLE=""
#!   USAGE=""
#!   USE_MARKDOWN=""
#!   VIEW_POSITION="-2472.94 437.504"
#!   WARN_INVALID_XFORM_PARAM="Yes"
#!   WORKSPACE_VERSION="1"
#!   ZOOM_SCALE="100"
#! >
#! <DATASETS>
#! </DATASETS>
#! <DATA_TYPES>
#! </DATA_TYPES>
#! <GEOM_TYPES>
#! </GEOM_TYPES>
#! <FEATURE_TYPES>
#! </FEATURE_TYPES>
#! <FMESERVER>
#! </FMESERVER>
#! <GLOBAL_PARAMETERS>
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="8"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="168.75168751687522 -1110.4277709443759"
#!   BOUNDING_RECT="168.75168751687522 -1110.4277709443759 463.00106825772946 71"
#!   ORDER="500000000000005"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="19135"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="No"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;DIRNAME&lt;space&gt;DestDataset_CSV2&lt;space&gt;Choose&lt;space&gt;a&lt;space&gt;folder&lt;space&gt;to&lt;space&gt;write&lt;space&gt;the&lt;space&gt;CSV&lt;space&gt;of&lt;space&gt;streamed&lt;space&gt;tweets: GUI&lt;space&gt;OPTIONAL&lt;space&gt;STRING_OR_ATTR_ENCODED&lt;space&gt;KEYWORD&lt;space&gt;Enter&lt;space&gt;single&lt;space&gt;keyword&lt;space&gt;for&lt;space&gt;tweet&lt;space&gt;search&lt;space&gt;&lt;openparen&gt;can&lt;space&gt;be&lt;space&gt;blank&lt;closeparen&gt;:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="DIRNAME,STRING"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)TweetStreamer.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="DestDataset_CSV2,C:&lt;backslash&gt;Users&lt;backslash&gt;swalker&lt;backslash&gt;Documents&lt;backslash&gt;GitHub&lt;backslash&gt;Web&lt;space&gt;Data&lt;space&gt;Module&lt;backslash&gt;fme-desktop-web-data&lt;backslash&gt;www,KEYWORD,GoodMorning"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="WorkspaceRunner"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="9"
#!   TYPE="Creator"
#!   VERSION="5"
#!   POSITION="-385.24831248312478 -1110.4277709443759"
#!   BOUNDING_RECT="-385.24831248312478 -1110.4277709443759 430 71"
#!   ORDER="500000000000006"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="19135"
#! >
#!     <OUTPUT_FEAT NAME="CREATED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="ATEND" PARM_VALUE="no"/>
#!     <XFORM_PARM PARM_NAME="COORDS" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="COORDSYS" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="CRE_ATTR" PARM_VALUE="_creation_instance"/>
#!     <XFORM_PARM PARM_NAME="GEOM" PARM_VALUE="&lt;lt&gt;?xml&lt;space&gt;version=&lt;quote&gt;1.0&lt;quote&gt;&lt;space&gt;encoding=&lt;quote&gt;US_ASCII&lt;quote&gt;&lt;space&gt;standalone=&lt;quote&gt;no&lt;quote&gt;&lt;space&gt;?&lt;gt&gt;&lt;lt&gt;geometry&lt;space&gt;dimension=&lt;quote&gt;2&lt;quote&gt;&lt;gt&gt;&lt;lt&gt;null&lt;solidus&gt;&lt;gt&gt;&lt;lt&gt;&lt;solidus&gt;geometry&lt;gt&gt;"/>
#!     <XFORM_PARM PARM_NAME="GEOMTYPE" PARM_VALUE="Geometry Object"/>
#!     <XFORM_PARM PARM_NAME="NUM" PARM_VALUE="1"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Creator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="11"
#!   TYPE="Decelerator"
#!   VERSION="0"
#!   POSITION="177.75275577460468 -1477.6785834525012"
#!   BOUNDING_RECT="177.75275577460468 -1477.6785834525012 454 71"
#!   ORDER="500000000000008"
#!   PARMS_EDITED="true"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="19135"
#! >
#!     <OUTPUT_FEAT NAME="OUTPUT"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <XFORM_ATTR ATTR_NAME="_creation_instance" IS_USER_CREATED="false" FEAT_INDEX="0" />
#!     <XFORM_PARM PARM_NAME="DECEL_TYPE" PARM_VALUE="Per Feature Delay"/>
#!     <XFORM_PARM PARM_NAME="DELAY" PARM_VALUE="180"/>
#!     <XFORM_PARM PARM_NAME="FEATURES_PER_SECOND" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="Decelerator"/>
#! </TRANSFORMER>
#! <TRANSFORMER
#!   IDENTIFIER="15"
#!   TYPE="SubDocumentTransformer"
#!   VERSION="1"
#!   POSITION="745.33598494022954 -1477.6785834525012"
#!   BOUNDING_RECT="745.33598494022954 -1477.6785834525012 556 71"
#!   ORDER="500000000000000"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="19135"
#! >
#!     <XFORM_PARM PARM_NAME="SUB_DOC_NAME" PARM_VALUE="WorkspaceScheduler"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="WorkspaceScheduler"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="10"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="8"
#!   SOURCE_PORT_DESC="fo 0 CREATED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="12"
#!   SOURCE_NODE="9"
#!   TARGET_NODE="11"
#!   SOURCE_PORT_DESC="fo 0 CREATED"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="1"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="16"
#!   SOURCE_NODE="11"
#!   TARGET_NODE="15"
#!   SOURCE_PORT_DESC="fo 0 OUTPUT"
#!   TARGET_PORT_DESC="fi 0 WorkspaceRunner_2_Input"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! <SUBDOCUMENTS>
#! <SUBDOCUMENT
#!   NAME="WorkspaceScheduler"
#!   CATEGORY=""
#!   DESCRIPTION=""
#!   DOC_DYNAMIC_INPUT_ATTRS="0"
#!   DOC_EXTENTS="2325.92 71"
#!   DOC_TOP_LEFT="-1059.5 -35.4985"
#!   FME_DOCUMENT_GUID=""
#!   FME_DOCUMENT_PRIORGUID=""
#!   FME_PROCESS_COUNT="NO_PARALLELISM"
#!   FME_PROCESS_GROUPS_ORDERED="No"
#!   FME_PROCESS_GROUP_BY=""
#!   FME_PROCESS_PRESERVE_GROUP_ATTR="No"
#!   FMX_ATTRIBUTE_PROPOGATION_MODE="AUTO"
#!   HISTORY=""
#!   IS_VISIBLE="true"
#!   LAST_SAVE_BUILD=""
#!   LAST_SAVE_DATE=""
#!   MARKDOWN_DESCRIPTION=""
#!   MARKDOWN_USAGE=""
#!   PYTHON_COMPATIBILITY=""
#!   SUPPRESS_UPGRADE="false"
#!   TITLE="WorkspaceScheduler"
#!   USAGE=""
#!   USE_MARKDOWN="NO"
#!   VIEW_POSITION="-1206.26 254.169"
#!   XFORM_DEPRECATED="No"
#!   ZOOM_SCALE="100"
#! >
#! <GLOBAL_PARAMETERS>
#! </GLOBAL_PARAMETERS>
#! <COMMENTS>
#! </COMMENTS>
#! <CONSTANTS>
#! </CONSTANTS>
#! <BOOKMARKS>
#! </BOOKMARKS>
#! <TRANSFORMERS>
#! <TRANSFORMER
#!   IDENTIFIER="2"
#!   TYPE="WorkspaceRunner"
#!   VERSION="3"
#!   POSITION="-252.50051713496578 35.501470258436257"
#!   BOUNDING_RECT="-252.50051713496578 35.501470258436257 505.00106825772946 71"
#!   ORDER="500000000000009"
#!   PARMS_EDITED="false"
#!   ENABLED="true"
#!   LAST_PARM_EDIT="19135"
#! >
#!     <OUTPUT_FEAT NAME="SUCCEEDED"/>
#!     <FEAT_COLLAPSED COLLAPSED="0"/>
#!     <OUTPUT_FEAT NAME="FAILED"/>
#!     <FEAT_COLLAPSED COLLAPSED="1"/>
#!     <XFORM_ATTR ATTR_NAME="_failure_message" IS_USER_CREATED="false" FEAT_INDEX="1" />
#!     <OUTPUT_FEAT NAME="SUMMARY"/>
#!     <FEAT_COLLAPSED COLLAPSED="2"/>
#!     <XFORM_ATTR ATTR_NAME="_proc_count" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_ATTR ATTR_NAME="_processes{}" IS_USER_CREATED="false" FEAT_INDEX="2" />
#!     <XFORM_PARM PARM_NAME="BLOCKING" PARM_VALUE="Yes"/>
#!     <XFORM_PARM PARM_NAME="LAST_KNOWN_PARAM_DEFS" PARM_VALUE="GUI&lt;space&gt;FILENAME&lt;space&gt;DestDataset_GEOJSON&lt;space&gt;GeoJSON_Files&lt;openparen&gt;*.json&lt;closeparen&gt;|*.json|All_Files|*&lt;space&gt;Destination&lt;space&gt;GeoJSON&lt;space&gt;File: GUI&lt;space&gt;MULTIFILE&lt;space&gt;SourceDataset_CSV2&lt;space&gt;CSV&lt;solidus&gt;Compressed_CSV&lt;solidus&gt;TEXT_Files&lt;openparen&gt;*.csv&lt;semicolon&gt;*.gz&lt;semicolon&gt;*.txt&lt;closeparen&gt;|*.csv&lt;semicolon&gt;*.gz&lt;semicolon&gt;*.txt|CSV_Files&lt;openparen&gt;*.csv&lt;closeparen&gt;|*.csv|Compressed_CSV_Files&lt;openparen&gt;*.gz&lt;closeparen&gt;|*.gz|Text_Files&lt;openparen&gt;*.txt&lt;closeparen&gt;|*.txt|Compressed_Files&lt;openparen&gt;*.bz2&lt;semicolon&gt;*.gz&lt;closeparen&gt;|*.bz2&lt;semicolon&gt;*.gz|Archive_Files&lt;openparen&gt;*.7z&lt;semicolon&gt;*.7zip&lt;semicolon&gt;*.rar&lt;semicolon&gt;*.rvz&lt;semicolon&gt;*.tar&lt;semicolon&gt;*.tar.bz2&lt;semicolon&gt;*.tar.gz&lt;semicolon&gt;*.tgz&lt;semicolon&gt;*.zip&lt;semicolon&gt;*.zipx&lt;closeparen&gt;|*.7z&lt;semicolon&gt;*.7zip&lt;semicolon&gt;*.rar&lt;semicolon&gt;*.rvz&lt;semicolon&gt;*.tar&lt;semicolon&gt;*.tar.bz2&lt;semicolon&gt;*.tar.gz&lt;semicolon&gt;*.tgz&lt;semicolon&gt;*.zip&lt;semicolon&gt;*.zipx|All_Files|*&lt;space&gt;Source&lt;space&gt;CSV&lt;space&gt;&lt;openparen&gt;Comma&lt;space&gt;Separated&lt;space&gt;Value&lt;closeparen&gt;&lt;space&gt;File&lt;openparen&gt;s&lt;closeparen&gt;:"/>
#!     <XFORM_PARM PARM_NAME="MAX_PROC" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="MAX_TO_BATCH" PARM_VALUE="&lt;Unused&gt;"/>
#!     <XFORM_PARM PARM_NAME="PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="PARAMETER_TYPES" PARM_VALUE="FILENAME,MULTIFILE"/>
#!     <XFORM_PARM PARM_NAME="TRANSFORMER_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_FILE" PARM_VALUE="$(FME_MF_DIR)TweetFilter.fmw"/>
#!     <XFORM_PARM PARM_NAME="WORKSPACE_PARAMETERS" PARM_VALUE="DestDataset_GEOJSON,C:&lt;backslash&gt;Users&lt;backslash&gt;swalker&lt;backslash&gt;Documents&lt;backslash&gt;GitHub&lt;backslash&gt;Web&lt;space&gt;Data&lt;space&gt;Module&lt;backslash&gt;fme-desktop-web-data&lt;backslash&gt;www&lt;backslash&gt;tweets.json,SourceDataset_CSV2,C:&lt;backslash&gt;Users&lt;backslash&gt;swalker&lt;backslash&gt;Documents&lt;backslash&gt;GitHub&lt;backslash&gt;Web&lt;space&gt;Data&lt;space&gt;Module&lt;backslash&gt;fme-desktop-web-data&lt;backslash&gt;www&lt;backslash&gt;tweets.csv"/>
#!     <XFORM_PARM PARM_NAME="WS_PARAMETERS_GROUP" PARM_VALUE=""/>
#!     <XFORM_PARM PARM_NAME="XFORMER_NAME" PARM_VALUE="WorkspaceRunner_2"/>
#! </TRANSFORMER>
#! </TRANSFORMERS>
#! <SUBDOCUMENT_IOS>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="3"
#!   NAME="WorkspaceRunner_2_Input"
#!   POSITION="-1059.5015853926952 35.501470258436257"
#!   BOUNDING_RECT="-1059.5015853926952 35.501470258436257 659.00106825772946 71"
#!   COLLAPSED="true"
#!   PUBLISHED="true"
#!   IS_SOURCE="true"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! <SUBDOCUMENT_IO
#!   IDENTIFIER="5"
#!   NAME="WorkspaceRunner_2_Input"
#!   POSITION="460.42127087937547 35.501470258436257"
#!   BOUNDING_RECT="460.42127087937547 35.501470258436257 806.00106825772946 71"
#!   COLLAPSED="true"
#!   IS_SOURCE="loop"
#!   ATTR_MODE="0"
#! >
#! </SUBDOCUMENT_IO>
#! </SUBDOCUMENT_IOS>
#! <FEAT_LINKS>
#! <FEAT_LINK
#!   IDENTIFIER="4"
#!   SOURCE_NODE="3"
#!   TARGET_NODE="2"
#!   SOURCE_PORT_DESC="0"
#!   TARGET_PORT_DESC="fi 0 "
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! <FEAT_LINK
#!   IDENTIFIER="6"
#!   SOURCE_NODE="2"
#!   TARGET_NODE="5"
#!   SOURCE_PORT_DESC="fo 0 SUCCEEDED"
#!   TARGET_PORT_DESC="0"
#!   ENABLED="true"
#!   EXECUTION_IDX="0"
#!   HIDDEN="false"
#!   EXTRA_POINTS=""
#! />
#! </FEAT_LINKS>
#! <BREAKPOINTS>
#! </BREAKPOINTS>
#! <ATTR_LINKS>
#! </ATTR_LINKS>
#! </SUBDOCUMENT>
#! </SUBDOCUMENTS>
#! <LOOKUP_TABLES>
#! </LOOKUP_TABLES>
#! </WORKSPACE>

FME_PYTHON_VERSION 36
#! START_HEADER
#! START_WB_HEADER
READER_TYPE MULTI_READER
WRITER_TYPE NULL
WRITER_KEYWORD NULL_DEST
NULL_DEST_DATASET null
#! END_WB_HEADER
#! START_WB_HEADER
#! END_WB_HEADER
#! END_HEADER

LOG_FILENAME "$(FME_MF_DIR)TweetWorkspaceRunner.log"
LOG_APPEND NO
LOG_FILTER_MASK -1
LOG_MAX_FEATURES 200
LOG_MAX_RECORDED_FEATURES 200
FME_REPROJECTION_ENGINE FME
FME_IMPLICIT_CSMAP_REPROJECTION_MODE Auto
FME_GEOMETRY_HANDLING Enhanced
FME_STROKE_MAX_DEVIATION 0
# -------------------------------------------------------------------------

MULTI_READER_CONTINUE_ON_READER_FAILURE No

# -------------------------------------------------------------------------

MACRO WORKSPACE_NAME TweetWorkspaceRunner
MACRO FME_VIEWER_APP fmedatainspector
DEFAULT_MACRO WB_CURRENT_CONTEXT
# -------------------------------------------------------------------------
Tcl2 proc Creator_CoordSysRemover {} {   global FME_CoordSys;   set FME_CoordSys {}; }
MACRO Creator_XML     NOT_ACTIVATED
MACRO Creator_CLASSIC NOT_ACTIVATED
MACRO Creator_2D3D    2D_GEOMETRY
MACRO Creator_COORDS  <Unused>
INCLUDE [ if { {Geometry Object} == {Geometry Object} } {            puts {MACRO Creator_XML *} } ]
INCLUDE [ if { {Geometry Object} == {2D Coordinate List} } {            puts {MACRO Creator_2D3D 2D_GEOMETRY};            puts {MACRO Creator_CLASSIC *} } ]
INCLUDE [ if { {Geometry Object} == {3D Coordinate List} } {            puts {MACRO Creator_2D3D 3D_GEOMETRY};            puts {MACRO Creator_CLASSIC *} } ]
INCLUDE [ if { {Geometry Object} == {2D Min/Max Box} } {            set comment {                We need to turn the COORDS which are                    minX minY maxX maxY                into a full polygon list of coordinates            };            set splitCoords [split [string trim {<Unused>}]];            if { [llength $splitCoords] > 4} {               set trimmedCoords {};               foreach item $splitCoords { if { $item != {} } {lappend trimmedCoords $item} };               set splitCoords $trimmedCoords;            };            if { [llength $splitCoords] != 4 } {                error {Creator: Coordinate list is expected to be a space delimited list of four numbers as 'minx miny maxx maxy' - `<Unused>' is invalid};            };            set minX [lindex $splitCoords 0];            set minY [lindex $splitCoords 1];            set maxX [lindex $splitCoords 2];            set maxY [lindex $splitCoords 3];            puts "MACRO Creator_COORDS $minX $minY $minX $maxY $maxX $maxY $maxX $minY $minX $minY";            puts {MACRO Creator_2D3D 2D_GEOMETRY};            puts {MACRO Creator_CLASSIC *} } ]
FACTORY_DEF $(Creator_XML) CreationFactory    FACTORY_NAME Creator_XML_Creator    CREATE_AT_END no    OUTPUT FEATURE_TYPE _____CREATED______        @Geometry(FROM_ENCODED_STRING,<lt>?xml<space>version=<quote>1.0<quote><space>encoding=<quote>US_ASCII<quote><space>standalone=<quote>no<quote><space>?<gt><lt>geometry<space>dimension=<quote>2<quote><gt><lt>null<solidus><gt><lt><solidus>geometry<gt>)
FACTORY_DEF $(Creator_CLASSIC) CreationFactory    FACTORY_NAME Creator_CLASSIC_Creator    $(Creator_2D3D) $(Creator_COORDS)    CREATE_AT_END no    OUTPUT FEATURE_TYPE _____CREATED______
FACTORY_DEF * TeeFactory    FACTORY_NAME Creator_Cloner    INPUT FEATURE_TYPE _____CREATED______        @Tcl2(Creator_CoordSysRemover)        @CoordSys()    NUMBER_OF_COPIES 1    COPY_NUMBER_ATTRIBUTE "_creation_instance"    OUTPUT FEATURE_TYPE Creator_CREATED        fme_feature_type Creator
FACTORY_DEF * TeeFactory   FACTORY_NAME "Creator CREATED Splitter"   INPUT FEATURE_TYPE Creator_CREATED   OUTPUT FEATURE_TYPE Creator_CREATED_0_GJAgmIF9G6c=   OUTPUT FEATURE_TYPE Creator_CREATED_1_Exx7idfjvCA=
FACTORY_DEF * BranchingFactory   FACTORY_NAME "Creator_CREATED_0_GJAgmIF9G6c= Brancher -1 10"   INPUT FEATURE_TYPE Creator_CREATED_0_GJAgmIF9G6c=   TARGET_FACTORY "$(WB_CURRENT_CONTEXT)_CREATOR_BRANCH_TARGET"   MAXIMUM_COUNT None   OUTPUT PASSED FEATURE_TYPE *
FACTORY_DEF * BranchingFactory   FACTORY_NAME "Creator_CREATED_1_Exx7idfjvCA= Brancher -1 12"   INPUT FEATURE_TYPE Creator_CREATED_1_Exx7idfjvCA=   TARGET_FACTORY "$(WB_CURRENT_CONTEXT)_CREATOR_BRANCH_TARGET"   MAXIMUM_COUNT None   OUTPUT PASSED FEATURE_TYPE *
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(WB_CURRENT_CONTEXT)_CREATOR_BRANCH_TARGET"   INPUT FEATURE_TYPE *  OUTPUT FEATURE_TYPE *
# -------------------------------------------------------------------------
# This is just a simple delay, which is given a # of seconds to stall
Tcl2 proc Decelerator_delay {seconds unused} {     after [expr round($seconds * 1000)]; }
Tcl2 set Decelerator_clockMillisecondsWhenLastFeatureWentBy [clock clicks -milliseconds];
# This proc ensures that no more than some maximum number of features get through each second
Tcl2 proc Decelerator_maxpersecond {unused maxFeaturesPerSecond} {     global Decelerator_clockMillisecondsWhenLastFeatureWentBy;     set minimumDelayInMilliseconds [expr 1000.0 / $maxFeaturesPerSecond];     set clockMillisecondsNow [clock clicks -milliseconds];     set milliSecondsSinceLastFeature [expr $clockMillisecondsNow -                    [set Decelerator_clockMillisecondsWhenLastFeatureWentBy]];     if {$milliSecondsSinceLastFeature < $minimumDelayInMilliseconds} {         after [expr round($minimumDelayInMilliseconds - $milliSecondsSinceLastFeature)];     };     set Decelerator_clockMillisecondsWhenLastFeatureWentBy [clock clicks -milliseconds]; }
# Now set up which of the above two delay procedures we'll actually
# use by renaming the one we want to "Decelerator_Waiter"
# Then that is what we'll actually call when a feature goes by.
Tcl2 if { {Per Feature Delay} == {Per Feature Delay} } {         rename Decelerator_delay Decelerator_Waiter;      } else {         rename Decelerator_maxpersecond Decelerator_Waiter;      };
FACTORY_DEF * TestFactory    FACTORY_NAME Decelerator_DelayRejector    INPUT  FEATURE_TYPE Creator_CREATED_1_Exx7idfjvCA=    TEST "180" TYPE NUM ENCODED    TEST PERFEATDELAY != PERFEATDELAY    BOOLEAN_OPERATOR OR    OUTPUT FAILED FEATURE_TYPE Decelerator_<REJECTED>       fme_rejection_code "INVALID_PARAMETER_DELAY_PER_FEATURE"    OUTPUT PASSED FEATURE_TYPE Decelerator__toMaximumRejector__
FACTORY_DEF * TestFactory    FACTORY_NAME Decelerator_MaximumRejector    INPUT FEATURE_TYPE Decelerator__toMaximumRejector__    TEST "<Unused>" TYPE NUM ENCODED    TEST PERFEATDELAY != FEATPERSEC    BOOLEAN_OPERATOR OR    OUTPUT FAILED FEATURE_TYPE Decelerator_<REJECTED>       fme_rejection_code "INVALID_PARAMETER_MAXIMUM_FEATURES_PER_SECOND"    OUTPUT PASSED FEATURE_TYPE Decelerator__toOutput__
FACTORY_DEF * TeeFactory    FACTORY_NAME Decelerator_Decelerator    INPUT FEATURE_TYPE Decelerator__toOutput__    OUTPUT FEATURE_TYPE Decelerator_OUTPUT         @Tcl2("Decelerator_Waiter {180} {<Unused>}")
# -------------------------------------------------------------------------
FACTORY_DEF * TeeFactory   FACTORY_NAME "WorkspaceScheduler WorkspaceRunner_2_Input Input Collector"   INPUT FEATURE_TYPE Decelerator_OUTPUT   OUTPUT FEATURE_TYPE WorkspaceScheduler_WorkspaceRunner_2_Input
MACRO WorkspaceScheduler_WORKSPACE_NAME WorkspaceScheduler
MACRO $(WorkspaceScheduler_WORKSPACE_NAME)_XFORMER_NAME WorkspaceScheduler
MACRO $(WorkspaceScheduler_WORKSPACE_NAME)_TRANSFORMER_GROUP 
MACRO $(WorkspaceScheduler_WORKSPACE_NAME)_SUB_DOC_NAME WorkspaceScheduler
DEFAULT_MACRO WorkspaceScheduler_WORKSPACE_NAME ""
INCLUDE [puts {MACRO WB_OLD_CONTEXT_$(WorkspaceScheduler_WORKSPACE_NAME) $(WB_CURRENT_CONTEXT)};          puts {MACRO WB_CURRENT_CONTEXT $(WorkspaceScheduler_WORKSPACE_NAME)}]
FACTORY_DEF * TeeFactory   FACTORY_NAME "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input1542151270 Input Splitter"   INPUT FEATURE_TYPE "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input"   OUTPUT FEATURE_TYPE "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input"
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Escape existing double quotes and then wrap in double quotes
Tcl2 proc quotifyForParameterFileV3 { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   set doQuote 0;   if {[string first { } $sourceString] != -1} {      set doQuote 1;   };   set sourceString [string map {{\"} {\\"}} $sourceString];   if {$doQuote == 1} {      set sourceString \\"$sourceString\\";   };   return $sourceString; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run
Tcl2 proc $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_runner { parmListString workspaceFile } {    global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands;    global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_batch_count;    incr $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_batch_count 0;    if { [info exists $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands] == 0 } {       set $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set parmListString [string range $parmListString 1 end-1];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3 $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {FILENAME,MULTIFILE} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3 $parmValue];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands [join $commandArguments " "];    incr $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_batch_count;    if { {Yes} == {No} && {<Unused>} > 1  && $$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_batch_count <= {<Unused>} } {       FME_LogMessage fme_inform 933450 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $commandArgumentsToLog;    };    if { {Yes} != {No} || $$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_batch_count == {<Unused>} } {       set $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_batch_count 0;       set commandFile [$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_writeCommandFile $$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_flushPending { } {    global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands;    if { [info exists $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands] == 1 && [llength $$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands] > 0 } {       set workspaceToRun [lindex $$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands 0];       set commandFile [$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_writeCommandFile $$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {Yes} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_runCommand {commandArguments workspaceFileUnix} {    if { {Yes} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {Yes} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {Yes} == {No} } {        lappend commandArguments {&};    };    if { {Yes} == {No} } {       after 1000;       while { [FME_CanSpawnFme <Unused>] == {0} } {             after 2000;       };    };    if { Yes == {No} && {<Unused>} > 1 } {       FME_LogMessage fme_inform 933452 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $commandArguments;    } else {       FME_LogMessage fme_inform 933453 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $commandArguments;    };    if { $::__platform__ == {windows} && {Yes} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_process_count;       incr $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_process_count;       if { {Yes} == {No} } {           FME_LogMessage fme_inform 933455 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $workspaceFileUnix;           global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_all_processes;           lappend $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2 $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF * TestFactory    FACTORY_NAME $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_ExecutorAndRouter    INPUT  FEATURE_TYPE "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input"    TEST @Tcl2("$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_runner {(DestDataset_GEOJSONC:\Users\swalker\Documents\GitHub\Web Data Module\fme-desktop-web-data\www\tweets.jsonSourceDataset_CSV2C:\Users\swalker\Documents\GitHub\Web Data Module\fme-desktop-web-data\www\tweets.csv)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)TweetFilter.fmw,$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2)}") == SUCCESS    OUTPUT PASSED FEATURE_TYPE "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_SUCCEEDED"
Tcl2 proc $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_summarizer { } {     global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_process_count 0;     FME_SetAttribute _proc_count [set $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_process_count];     global $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_all_processes;     if {[info exists $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_all_processes]} {         set index 0;         foreach pid [set $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_22679306_b4d1_4fbc_8356_de063a17a98f0_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
FACTORY_DEF * CreationFactory    FACTORY_NAME $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_SummaryMaker    CREATE_AT_END yes
FACTORY_DEF * BranchingFactory   TARGET_FACTORY "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input1542151270 Input Splitter"   FACTORY_NAME "Loop to $(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input1542151270 Input Splitter"   MAXIMUM_COUNT -1   INPUT FEATURE_TYPE "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_SUCCEEDED"   OUTPUT PASSED FEATURE_TYPE "$(WorkspaceScheduler_WORKSPACE_NAME)_WorkspaceRunner_2_Input"
INCLUDE [puts {MACRO WB_CURRENT_CONTEXT $(WB_OLD_CONTEXT_$(WorkspaceScheduler_WORKSPACE_NAME))}]
# -------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# Determine the "NULL" device so we can ensure we don't get stray output
# messing up our stdout if we are running workspaces in the background
# See http://wiki.tcl.tk/1649 for a description of the tcl_platform
# variable, the "platform" part seems to have valid values windows, unix, and
# macintosh (the latter of which is actually pre-OS X)
# PR#83334 - On Windows when we are creating child process asynchronously
# (BLOCKING == NO), we use FME's @System() call (FME_Execute System) ensuring
# that the child process doesn't inherit handles from parent process. This allows
# parent process to close feature caches and not depend on spawned processes.
Tcl2 if { $tcl_platform(platform) == {windows} } {         set ::null_device {NUL:};         set ::__WR_ENV_HELPER__ {};         set ::__platform__ {windows};      } else {         set ::null_device {/dev/null};         set ::__WR_ENV_HELPER__ {/usr/bin/env FME_SUBPROCESS_RUN_DETACHED=1};         set ::__platform__ {unix};      };
# ------------------------------------------------------------------------------
# Escape existing double quotes and then wrap in double quotes
Tcl2 proc quotifyForParameterFileV3 { sourceString } {   if {[string length $sourceString] == 0} {      return {\"\"};   };   set doQuote 0;   if {[string first { } $sourceString] != -1} {      set doQuote 1;   };   set sourceString [string map {{\"} {\\"}} $sourceString];   if {$doQuote == 1} {      set sourceString \\"$sourceString\\";   };   return $sourceString; };
# ------------------------------------------------------------------------------
# Main runner procedure, takes in a parameter list as string which is delimited
# by \x07 (BELL) character and the workspace to run
Tcl2 proc WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_runner { parmListString workspaceFile } {    global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands;    global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_batch_count;    incr WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_batch_count 0;    if { [info exists WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands] == 0 } {       set WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands {};    };    set workspaceFileUnix [regsub -all {\\} $workspaceFile {/}];    set parmListString [string range $parmListString 1 end-1];    set comment    {        Build up the command line in a list, which we'll write it out to a        parameter file.    };    set commandArguments {};    set commandArgumentsToLog {};    set workspaceToRun [quotifyForParameterFileV3 $workspaceFileUnix];    lappend commandArguments $workspaceToRun;    lappend commandArgumentsToLog $workspaceToRun;    set parameterList [split $parmListString \x07];    set parmTypes [split {DIRNAME,STRING} {,}];    foreach {parmName parmValue} $parameterList {parmType} $parmTypes {      set parmValue [quotifyForParameterFileV3 $parmValue];      lappend commandArguments --$parmName;      lappend commandArgumentsToLog --$parmName;      lappend commandArguments $parmValue;      if { [string first {PASSWORD} $parmType] != -1 } {           lappend commandArgumentsToLog {*********};      } else {           lappend commandArgumentsToLog $parmValue;      };    };    lappend WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands [join $commandArguments " "];    incr WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_batch_count;    if { {No} == {No} && {1} > 1  && $WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_batch_count <= {1} } {       FME_LogMessage fme_inform 933450 WorkspaceRunner $commandArgumentsToLog;    } else {       FME_LogMessage fme_inform 933451 WorkspaceRunner $commandArgumentsToLog;    };    if { {No} != {No} || $WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_batch_count == {1} } {       set WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_batch_count 0;       set commandFile [WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_writeCommandFile $WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {No} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend cmdArgs {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;    } else {       return SUCCESS;    };    return [WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_runCommand $cmdArgs $workspaceFileUnix]; }
# ------------------------------------------------------------------------------
# When batching commands, any overflow commands will be run at the end. Say you
# batch by 2 and there are 5 incoming features. Then we will have 2 batches with
# 2 commands each and 1 overflow batch with 1 command
Tcl2 proc WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_flushPending { } {    global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands;    if { [info exists WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands] == 1 && [llength $WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands] > 0 } {       set workspaceToRun [lindex $WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands 0];       set commandFile [WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_writeCommandFile $WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands];       if { $commandFile == {} } {          return FAILURE;       };       set WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_commands {};       set fmeAbsPath {$(FME_HOME_UNIX)/fme};       if { {No} == {No} && $::__platform__ == {windows} }       {          set comment          {             Only on Windows in non-blocking mode we have to make sure that paths             are always quoted because we use non-Tcl method to run the final command          };          set commandFile \\"$commandFile\\";          set fmeAbsPath \\"$fmeAbsPath\\";       };       lappend commandArguments {*}$::__WR_ENV_HELPER__ $fmeAbsPath COMMAND_FILE $commandFile;       return [WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_runCommand $commandArguments $workspaceToRun];    };    return SUCCESS; }
# ------------------------------------------------------------------------------
# Build and run the command
Tcl2 proc WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_runCommand {commandArguments workspaceFileUnix} {    if { {No} == {No} && $::__platform__ != {windows} } {       lappend commandArguments \">$::null_device\";       lappend commandArguments \"<$::null_device\";    };    set comment    {       The below 2>@1 forces any standard error output to go into the msg variable       or to NULL if we're running in the background.    };    if { {No} != {No} || $::__platform__ != {windows} } {       lappend commandArguments {2>@1};    };    if { {No} == {No} } {        lappend commandArguments {&};    };    if { {No} == {No} } {       after 1000;       while { [FME_CanSpawnFme 1] == {0} } {             after 2000;       };    };    if { No == {No} && {1} > 1 } {       FME_LogMessage fme_inform 933452 WorkspaceRunner $commandArguments;    } else {       FME_LogMessage fme_inform 933453 WorkspaceRunner $commandArguments;    };    if { $::__platform__ == {windows} && {No} == {No} } {       set comment       {          Only on Windows in non-blocking mode we convert Tcl list to string joined          by space (affectively flattening the list). Prior to this we have already          ensured that in this mode paths are always quoted.       };       set commandArguments [join $commandArguments " "];       set catchResult [catch {FME_Execute System RETURN_PID_IF_ASYNC $commandArguments} msg];    } else {       set catchResult [catch {eval [concat exec $commandArguments]} msg];    };    if { $catchResult } {       set msg [regsub {\015*\012child[^\012]*$} $msg {}];       FME_LogMessage fme_warn 933454 WorkspaceRunner $workspaceFileUnix "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return FAILURE;    } else {       global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_process_count;       incr WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_process_count;       if { {No} == {No} } {           FME_LogMessage fme_inform 933455 WorkspaceRunner $workspaceFileUnix;           global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_all_processes;           lappend WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_all_processes $msg;       } else {           FME_LogMessage fme_inform 933456 WorkspaceRunner $workspaceFileUnix;       };       return SUCCESS;    }; }
# ------------------------------------------------------------------------------
# Create and write commands to command file
Tcl2 proc WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_writeCommandFile { commands } {    set commandFile [FME_TempFilename wsr_cm_];    if { [catch { set cmdFileId [open $commandFile "w"] } msg ] } {       FME_LogMessage fme_warn 933457 WorkspaceRunner $commandFile "\n\n$msg\n";       FME_SetAttribute _failure_message $msg;       return {};    };    fconfigure $cmdFileId -encoding utf-8;    puts $cmdFileId {#! encoding=\"utf-8\"};    puts $cmdFileId DELETE_FILE_AFTER_LOAD;    foreach {command} $commands {       puts $cmdFileId $command;    };    close $cmdFileId;    return $commandFile; }
# ------------------------------------------------------------------------------
# Use \x07 (BELL) character as the delimiter when writing WORKSPACE_PARAMETERS
# to mapping file
FACTORY_DEF * TestFactory    FACTORY_NAME WorkspaceRunner_ExecutorAndRouter    INPUT  FEATURE_TYPE Creator_CREATED_0_GJAgmIF9G6c=    TEST @Tcl2("WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_runner {(DestDataset_CSV2C:\Users\swalker\Documents\GitHub\Web Data Module\fme-desktop-web-data\wwwKEYWORDGoodMorning)} {@EvaluateExpression(FDIV,STRING,$(FME_MF_DIR$encode)TweetStreamer.fmw,WorkspaceRunner)}") == SUCCESS
Tcl2 proc WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_summarizer { } {     global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_process_count;     set comment { incr 0 creates the variable if it wasn't present };     incr WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_process_count 0;     FME_SetAttribute _proc_count [set WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_process_count];     global WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_all_processes;     if {[info exists WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_all_processes]} {         set index 0;         foreach pid [set WorkspaceRunner_5f6c805c_72ce_44b9_827a_df11aef42cea0_all_processes] {             FME_SetAttribute \"_processes{$index}\" $pid;             incr index;         }     } }
FACTORY_DEF * CreationFactory    FACTORY_NAME WorkspaceRunner_SummaryMaker    CREATE_AT_END yes
# -------------------------------------------------------------------------

FACTORY_DEF * RoutingFactory FACTORY_NAME "Destination Feature Type Routing Correlator"   COMMAND_PARM_EVALUATION SINGLE_PASS   INPUT FEATURE_TYPE *   FEATURE_TYPE_ATTRIBUTE __wb_out_feat_type__   OUTPUT ROUTED FEATURE_TYPE *    OUTPUT NOT_ROUTED FEATURE_TYPE __nuke_me__ @Tcl2("FME_StatMessage 818059 [FME_GetAttribute fme_template_feature_type] 818060 818061 fme_warn")
# -------------------------------------------------------------------------

FACTORY_DEF * TeeFactory   FACTORY_NAME "Final Output Nuker"   INPUT FEATURE_TYPE __nuke_me__

